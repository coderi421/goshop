// license that can be found in the LICENSE file.

// Code generated by "codegen -type=int"; DO NOT EDIT.

package code

// init register error codes defines in this source code to `imooc/mxshop/pkg/errors`
func init() {
	register(ErrEncrypt, 401, "Error occurred while encrypting the user password")
	register(ErrSignatureInvalid, 401, "Signature is invalid")
	register(ErrExpired, 401, "Token expired")
	register(ErrInvalidAuthHeader, 401, "Invalid authorization header")
	register(ErrMissingHeader, 401, "The `Authorization` header was empty")
	register(ErrPasswordIncorrect, 401, "Password was incorrect")
	register(ErrPermissionDenied, 403, "Permission denied")
	register(ErrEncodingFailed, 500, "Encoding failed due to an error with the data")
	register(ErrDecodingFailed, 500, "Decoding failed due to an error with the data")
	register(ErrInvalidJSON, 500, "Data is not valid JSON")
	register(ErrEncodingJSON, 500, "JSON data could not be encoded")
	register(ErrDecodingJSON, 500, "JSON data could not be decoded")
	register(ErrInvalidYaml, 500, "Data is not valid Yaml")
	register(ErrEncodingYaml, 500, "Yaml data could not be encoded")
	register(ErrDecodingYaml, 500, "Yaml data could not be decoded")
	register(ErrDatabase, 500, "Database error")
	register(ErrConnectDB, 500, "Init db error")
	register(ErrConnectGRPC, 500, "Connect to grpc error")
	register(ErrGoodsNotFound, 404, "Goods not found")
	register(ErrCategoryNotFound, 404, "Category not found")
	register(ErrEsUnmarshal, 500, "Es unmarshal error")
	register(ErrInventoryNotFound, 404, "Inventory not found")
	register(ErrInvSellDetailNotFound, 400, "Inventory sell detail not found")
	register(ErrInvNotEnough, 400, "Inventory not enough")
	register(ErrShopCartItemNotFound, 404, "ShopCart item not found")
	register(ErrSubmitOrder, 400, "Submit order error")
	register(ErrNoGoodsSelect, 404, "No Goods selected")
	register(ErrUserNotFound, 404, "User not found")
	register(ErrUserAlreadyExists, 400, "User already exists")
	register(ErrUserPasswordIncorrect, 400, "User password incorrect")
	register(ErrSmsSend, 400, "Send sms error")
	register(ErrCodeNotExist, 400, "Sms code incorrect or expired")
	register(ErrCodeInCorrect, 400, "Sms code incorrect")
	register(ErrCodeInvalidParam, 400, "Invalid param")
	register(ErrInit, 500, "Init Discovery failed")
	register(ErrSmsIncorrect, 400, "Sms code incorrect")
}
